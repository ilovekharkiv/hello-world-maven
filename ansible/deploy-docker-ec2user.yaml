---
- name: Wait for ssh connection
  hosts: all
  gather_facts: False
  tasks:
    - name: Make sure ssh port open
      wait_for:
        port: 22
        delay: 10
        timeout: 100
        search_regex: OpenSSH
        host: '{{(ansible_ssh_host|default(ansible_host))|default(inventory_hostname)}}'
      vars:
        ansible_connection: local

- name: Install python3,docker,docker-compose
  hosts: all
  become: yes
  gather_facts: False
  tasks:
    - name: Make sure python3, docker and docker-compose are installed
      vars:
        ansible_python_interpreter: /usr/bin/python
      yum: 
        name: 
          - python3
          - docker
        update_cache: yes
        state: present
    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.27.4/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: +x
    - name: Make sure that docker is running
      systemd:
        name: docker
        state: started
    - name: Install docker python module
      pip:
        name: 
          - docker
          - docker-compose

- name: Add ec2-user to docker group
  hosts: all
  become: yes
  tasks:
    - name: Add ec2-user to docker group
      user:
        name: ec2-user
        groups: docker
        append: yes
    - name: Reconnect to the server
      meta: reset_connection

- name: Start docker containers
  hosts: all
  vars_files:
    - ansible_vars
  tasks:
    - name: Copy docker compose file
      copy: 
        src: /home/ubuntu/workspace/final_project_epam_master/docker-compose.yaml
        dest: /home/ec2-user
    - name: Docker login
      docker_login:
        registry_url: https://index.docker.io/v1/
        username: ilovekharkiv
        password: "{{docker_password}}"
    #- name: Start containers via docker-compose
     # docker_compose: 
      #  project_src: /home/ec2-user
       # state: present #docker compose up
    - name: Run java maven container
      docker_container:
        name: ilovekharkiv
        image: "ilovekharkiv/ilovekharkiv:{{docker_image}}"
        state: present
        ports:
          - "8080:80"
        



